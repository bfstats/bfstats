/**
 * This class is generated by jOOQ
 */
package io.github.bfvstats.jooq.tables;


import io.github.bfvstats.jooq.DefaultSchema;
import io.github.bfvstats.jooq.Keys;
import io.github.bfvstats.jooq.tables.records.RoundEndStatsRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RoundEndStats extends TableImpl<RoundEndStatsRecord> {

    private static final long serialVersionUID = -161784447;

    /**
     * The reference instance of <code>round_end_stats</code>
     */
    public static final RoundEndStats ROUND_END_STATS = new RoundEndStats();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RoundEndStatsRecord> getRecordType() {
        return RoundEndStatsRecord.class;
    }

    /**
     * The column <code>round_end_stats.round_id</code>.
     */
    public final TableField<RoundEndStatsRecord, Integer> ROUND_ID = createField("round_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>round_end_stats.end_time</code>.
     */
    public final TableField<RoundEndStatsRecord, Timestamp> END_TIME = createField("end_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>round_end_stats.winning_team</code>.
     */
    public final TableField<RoundEndStatsRecord, Integer> WINNING_TEAM = createField("winning_team", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>round_end_stats.victory_type</code>.
     */
    public final TableField<RoundEndStatsRecord, Integer> VICTORY_TYPE = createField("victory_type", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>round_end_stats.end_tickets_team_1</code>.
     */
    public final TableField<RoundEndStatsRecord, Integer> END_TICKETS_TEAM_1 = createField("end_tickets_team_1", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>round_end_stats.end_tickets_team_2</code>.
     */
    public final TableField<RoundEndStatsRecord, Integer> END_TICKETS_TEAM_2 = createField("end_tickets_team_2", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>round_end_stats</code> table reference
     */
    public RoundEndStats() {
        this("round_end_stats", null);
    }

    /**
     * Create an aliased <code>round_end_stats</code> table reference
     */
    public RoundEndStats(String alias) {
        this(alias, ROUND_END_STATS);
    }

    private RoundEndStats(String alias, Table<RoundEndStatsRecord> aliased) {
        this(alias, aliased, null);
    }

    private RoundEndStats(String alias, Table<RoundEndStatsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<RoundEndStatsRecord> getPrimaryKey() {
        return Keys.PK_ROUND_END_STATS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<RoundEndStatsRecord>> getKeys() {
        return Arrays.<UniqueKey<RoundEndStatsRecord>>asList(Keys.PK_ROUND_END_STATS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<RoundEndStatsRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<RoundEndStatsRecord, ?>>asList(Keys.FK_ROUND_END_STATS_ROUND_1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RoundEndStats as(String alias) {
        return new RoundEndStats(alias, this);
    }

    /**
     * Rename this table
     */
    public RoundEndStats rename(String name) {
        return new RoundEndStats(name, null);
    }
}
