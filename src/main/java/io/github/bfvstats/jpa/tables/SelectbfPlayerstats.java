/**
 * This class is generated by jOOQ
 */
package io.github.bfvstats.jpa.tables;


import io.github.bfvstats.jpa.DefaultSchema;
import io.github.bfvstats.jpa.Keys;
import io.github.bfvstats.jpa.tables.records.SelectbfPlayerstatsRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SelectbfPlayerstats extends TableImpl<SelectbfPlayerstatsRecord> {

    private static final long serialVersionUID = 1755892169;

    /**
     * The reference instance of <code>selectbf_playerstats</code>
     */
    public static final SelectbfPlayerstats SELECTBF_PLAYERSTATS = new SelectbfPlayerstats();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SelectbfPlayerstatsRecord> getRecordType() {
        return SelectbfPlayerstatsRecord.class;
    }

    /**
     * The column <code>selectbf_playerstats.id</code>.
     */
    public final TableField<SelectbfPlayerstatsRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>selectbf_playerstats.player_id</code>.
     */
    public final TableField<SelectbfPlayerstatsRecord, Integer> PLAYER_ID = createField("player_id", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>selectbf_playerstats.team</code>.
     */
    public final TableField<SelectbfPlayerstatsRecord, Byte> TEAM = createField("team", org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>selectbf_playerstats.score</code>.
     */
    public final TableField<SelectbfPlayerstatsRecord, Integer> SCORE = createField("score", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>selectbf_playerstats.kills</code>.
     */
    public final TableField<SelectbfPlayerstatsRecord, Integer> KILLS = createField("kills", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>selectbf_playerstats.deaths</code>.
     */
    public final TableField<SelectbfPlayerstatsRecord, Integer> DEATHS = createField("deaths", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>selectbf_playerstats.tks</code>.
     */
    public final TableField<SelectbfPlayerstatsRecord, Integer> TKS = createField("tks", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>selectbf_playerstats.captures</code>.
     */
    public final TableField<SelectbfPlayerstatsRecord, Integer> CAPTURES = createField("captures", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>selectbf_playerstats.attacks</code>.
     */
    public final TableField<SelectbfPlayerstatsRecord, Integer> ATTACKS = createField("attacks", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>selectbf_playerstats.defences</code>.
     */
    public final TableField<SelectbfPlayerstatsRecord, Integer> DEFENCES = createField("defences", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>selectbf_playerstats.objectives</code>.
     */
    public final TableField<SelectbfPlayerstatsRecord, Integer> OBJECTIVES = createField("objectives", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>selectbf_playerstats.objectivetks</code>.
     */
    public final TableField<SelectbfPlayerstatsRecord, Integer> OBJECTIVETKS = createField("objectivetks", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>selectbf_playerstats.heals</code>.
     */
    public final TableField<SelectbfPlayerstatsRecord, Integer> HEALS = createField("heals", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>selectbf_playerstats.selfheals</code>.
     */
    public final TableField<SelectbfPlayerstatsRecord, Integer> SELFHEALS = createField("selfheals", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>selectbf_playerstats.repairs</code>.
     */
    public final TableField<SelectbfPlayerstatsRecord, Byte> REPAIRS = createField("repairs", org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>selectbf_playerstats.otherrepairs</code>.
     */
    public final TableField<SelectbfPlayerstatsRecord, Byte> OTHERREPAIRS = createField("otherrepairs", org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>selectbf_playerstats.round_id</code>.
     */
    public final TableField<SelectbfPlayerstatsRecord, Integer> ROUND_ID = createField("round_id", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>selectbf_playerstats.first</code>.
     */
    public final TableField<SelectbfPlayerstatsRecord, Byte> FIRST = createField("first", org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>selectbf_playerstats.second</code>.
     */
    public final TableField<SelectbfPlayerstatsRecord, Byte> SECOND = createField("second", org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>selectbf_playerstats.third</code>.
     */
    public final TableField<SelectbfPlayerstatsRecord, Byte> THIRD = createField("third", org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * Create a <code>selectbf_playerstats</code> table reference
     */
    public SelectbfPlayerstats() {
        this("selectbf_playerstats", null);
    }

    /**
     * Create an aliased <code>selectbf_playerstats</code> table reference
     */
    public SelectbfPlayerstats(String alias) {
        this(alias, SELECTBF_PLAYERSTATS);
    }

    private SelectbfPlayerstats(String alias, Table<SelectbfPlayerstatsRecord> aliased) {
        this(alias, aliased, null);
    }

    private SelectbfPlayerstats(String alias, Table<SelectbfPlayerstatsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<SelectbfPlayerstatsRecord, Integer> getIdentity() {
        return Keys.IDENTITY_SELECTBF_PLAYERSTATS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<SelectbfPlayerstatsRecord> getPrimaryKey() {
        return Keys.PK_SELECTBF_PLAYERSTATS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<SelectbfPlayerstatsRecord>> getKeys() {
        return Arrays.<UniqueKey<SelectbfPlayerstatsRecord>>asList(Keys.PK_SELECTBF_PLAYERSTATS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SelectbfPlayerstats as(String alias) {
        return new SelectbfPlayerstats(alias, this);
    }

    /**
     * Rename this table
     */
    public SelectbfPlayerstats rename(String name) {
        return new SelectbfPlayerstats(name, null);
    }
}
