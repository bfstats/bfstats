/**
 * This class is generated by jOOQ
 */
package io.github.bfvstats.jpa.tables;


import io.github.bfvstats.jpa.DefaultSchema;
import io.github.bfvstats.jpa.Keys;
import io.github.bfvstats.jpa.tables.records.SelectbfRepairsRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SelectbfRepairs extends TableImpl<SelectbfRepairsRecord> {

    private static final long serialVersionUID = -986461377;

    /**
     * The reference instance of <code>selectbf_repairs</code>
     */
    public static final SelectbfRepairs SELECTBF_REPAIRS = new SelectbfRepairs();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SelectbfRepairsRecord> getRecordType() {
        return SelectbfRepairsRecord.class;
    }

    /**
     * The column <code>selectbf_repairs.id</code>.
     */
    public final TableField<SelectbfRepairsRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>selectbf_repairs.player_id</code>.
     */
    public final TableField<SelectbfRepairsRecord, Integer> PLAYER_ID = createField("player_id", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>selectbf_repairs.vehicle</code>.
     */
    public final TableField<SelectbfRepairsRecord, String> VEHICLE = createField("vehicle", org.jooq.impl.SQLDataType.VARCHAR.length(150).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>selectbf_repairs.amount</code>.
     */
    public final TableField<SelectbfRepairsRecord, Integer> AMOUNT = createField("amount", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>selectbf_repairs.repairtime</code>.
     */
    public final TableField<SelectbfRepairsRecord, Float> REPAIRTIME = createField("repairtime", org.jooq.impl.SQLDataType.REAL.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.REAL)), this, "");

    /**
     * The column <code>selectbf_repairs.times_repaired</code>.
     */
    public final TableField<SelectbfRepairsRecord, Integer> TIMES_REPAIRED = createField("times_repaired", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.field("'0'", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * Create a <code>selectbf_repairs</code> table reference
     */
    public SelectbfRepairs() {
        this("selectbf_repairs", null);
    }

    /**
     * Create an aliased <code>selectbf_repairs</code> table reference
     */
    public SelectbfRepairs(String alias) {
        this(alias, SELECTBF_REPAIRS);
    }

    private SelectbfRepairs(String alias, Table<SelectbfRepairsRecord> aliased) {
        this(alias, aliased, null);
    }

    private SelectbfRepairs(String alias, Table<SelectbfRepairsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<SelectbfRepairsRecord, Integer> getIdentity() {
        return Keys.IDENTITY_SELECTBF_REPAIRS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<SelectbfRepairsRecord> getPrimaryKey() {
        return Keys.PK_SELECTBF_REPAIRS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<SelectbfRepairsRecord>> getKeys() {
        return Arrays.<UniqueKey<SelectbfRepairsRecord>>asList(Keys.PK_SELECTBF_REPAIRS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SelectbfRepairs as(String alias) {
        return new SelectbfRepairs(alias, this);
    }

    /**
     * Rename this table
     */
    public SelectbfRepairs rename(String name) {
        return new SelectbfRepairs(name, null);
    }
}
