/**
 * This class is generated by jOOQ
 */
package io.github.bfvstats.jpa.tables.records;


import io.github.bfvstats.jpa.tables.SelectbfPlaytimes;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SelectbfPlaytimesRecord extends UpdatableRecordImpl<SelectbfPlaytimesRecord> implements Record5<Integer, Integer, Timestamp, Float, Integer> {

    private static final long serialVersionUID = 776313127;

    /**
     * Setter for <code>selectbf_playtimes.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>selectbf_playtimes.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>selectbf_playtimes.player_id</code>.
     */
    public void setPlayerId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>selectbf_playtimes.player_id</code>.
     */
    public Integer getPlayerId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>selectbf_playtimes.last_seen</code>.
     */
    public void setLastSeen(Timestamp value) {
        set(2, value);
    }

    /**
     * Getter for <code>selectbf_playtimes.last_seen</code>.
     */
    public Timestamp getLastSeen() {
        return (Timestamp) get(2);
    }

    /**
     * Setter for <code>selectbf_playtimes.playtime</code>.
     */
    public void setPlaytime(Float value) {
        set(3, value);
    }

    /**
     * Getter for <code>selectbf_playtimes.playtime</code>.
     */
    public Float getPlaytime() {
        return (Float) get(3);
    }

    /**
     * Setter for <code>selectbf_playtimes.slots_used</code>.
     */
    public void setSlotsUsed(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>selectbf_playtimes.slots_used</code>.
     */
    public Integer getSlotsUsed() {
        return (Integer) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, Integer, Timestamp, Float, Integer> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, Integer, Timestamp, Float, Integer> valuesRow() {
        return (Row5) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return SelectbfPlaytimes.SELECTBF_PLAYTIMES.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return SelectbfPlaytimes.SELECTBF_PLAYTIMES.PLAYER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field3() {
        return SelectbfPlaytimes.SELECTBF_PLAYTIMES.LAST_SEEN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Float> field4() {
        return SelectbfPlaytimes.SELECTBF_PLAYTIMES.PLAYTIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field5() {
        return SelectbfPlaytimes.SELECTBF_PLAYTIMES.SLOTS_USED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getPlayerId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value3() {
        return getLastSeen();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Float value4() {
        return getPlaytime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value5() {
        return getSlotsUsed();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SelectbfPlaytimesRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SelectbfPlaytimesRecord value2(Integer value) {
        setPlayerId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SelectbfPlaytimesRecord value3(Timestamp value) {
        setLastSeen(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SelectbfPlaytimesRecord value4(Float value) {
        setPlaytime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SelectbfPlaytimesRecord value5(Integer value) {
        setSlotsUsed(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SelectbfPlaytimesRecord values(Integer value1, Integer value2, Timestamp value3, Float value4, Integer value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SelectbfPlaytimesRecord
     */
    public SelectbfPlaytimesRecord() {
        super(SelectbfPlaytimes.SELECTBF_PLAYTIMES);
    }

    /**
     * Create a detached, initialised SelectbfPlaytimesRecord
     */
    public SelectbfPlaytimesRecord(Integer id, Integer playerId, Timestamp lastSeen, Float playtime, Integer slotsUsed) {
        super(SelectbfPlaytimes.SELECTBF_PLAYTIMES);

        set(0, id);
        set(1, playerId);
        set(2, lastSeen);
        set(3, playtime);
        set(4, slotsUsed);
    }
}
