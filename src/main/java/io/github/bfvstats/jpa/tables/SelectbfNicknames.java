/**
 * This class is generated by jOOQ
 */
package io.github.bfvstats.jpa.tables;


import io.github.bfvstats.jpa.DefaultSchema;
import io.github.bfvstats.jpa.tables.records.SelectbfNicknamesRecord;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SelectbfNicknames extends TableImpl<SelectbfNicknamesRecord> {

    private static final long serialVersionUID = 949643475;

    /**
     * The reference instance of <code>selectbf_nicknames</code>
     */
    public static final SelectbfNicknames SELECTBF_NICKNAMES = new SelectbfNicknames();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SelectbfNicknamesRecord> getRecordType() {
        return SelectbfNicknamesRecord.class;
    }

    /**
     * The column <code>selectbf_nicknames.nickname</code>.
     */
    public final TableField<SelectbfNicknamesRecord, String> NICKNAME = createField("nickname", org.jooq.impl.SQLDataType.VARCHAR.length(150).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>selectbf_nicknames.times_used</code>.
     */
    public final TableField<SelectbfNicknamesRecord, Integer> TIMES_USED = createField("times_used", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>selectbf_nicknames.player_id</code>.
     */
    public final TableField<SelectbfNicknamesRecord, Integer> PLAYER_ID = createField("player_id", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * Create a <code>selectbf_nicknames</code> table reference
     */
    public SelectbfNicknames() {
        this("selectbf_nicknames", null);
    }

    /**
     * Create an aliased <code>selectbf_nicknames</code> table reference
     */
    public SelectbfNicknames(String alias) {
        this(alias, SELECTBF_NICKNAMES);
    }

    private SelectbfNicknames(String alias, Table<SelectbfNicknamesRecord> aliased) {
        this(alias, aliased, null);
    }

    private SelectbfNicknames(String alias, Table<SelectbfNicknamesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SelectbfNicknames as(String alias) {
        return new SelectbfNicknames(alias, this);
    }

    /**
     * Rename this table
     */
    public SelectbfNicknames rename(String name) {
        return new SelectbfNicknames(name, null);
    }
}
