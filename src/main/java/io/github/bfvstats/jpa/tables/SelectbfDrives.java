/**
 * This class is generated by jOOQ
 */
package io.github.bfvstats.jpa.tables;


import io.github.bfvstats.jpa.DefaultSchema;
import io.github.bfvstats.jpa.Keys;
import io.github.bfvstats.jpa.tables.records.SelectbfDrivesRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SelectbfDrives extends TableImpl<SelectbfDrivesRecord> {

    private static final long serialVersionUID = -1642667574;

    /**
     * The reference instance of <code>selectbf_drives</code>
     */
    public static final SelectbfDrives SELECTBF_DRIVES = new SelectbfDrives();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SelectbfDrivesRecord> getRecordType() {
        return SelectbfDrivesRecord.class;
    }

    /**
     * The column <code>selectbf_drives.id</code>.
     */
    public final TableField<SelectbfDrivesRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>selectbf_drives.player_id</code>.
     */
    public final TableField<SelectbfDrivesRecord, Integer> PLAYER_ID = createField("player_id", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>selectbf_drives.vehicle</code>.
     */
    public final TableField<SelectbfDrivesRecord, Object> VEHICLE = createField("vehicle", org.jooq.impl.DefaultDataType.getDefaultDataType("tinytext"), this, "");

    /**
     * The column <code>selectbf_drives.drivetime</code>.
     */
    public final TableField<SelectbfDrivesRecord, Float> DRIVETIME = createField("drivetime", org.jooq.impl.SQLDataType.REAL.defaultValue(org.jooq.impl.DSL.field("'0'", org.jooq.impl.SQLDataType.REAL)), this, "");

    /**
     * The column <code>selectbf_drives.times_used</code>.
     */
    public final TableField<SelectbfDrivesRecord, Integer> TIMES_USED = createField("times_used", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.field("'0'", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * Create a <code>selectbf_drives</code> table reference
     */
    public SelectbfDrives() {
        this("selectbf_drives", null);
    }

    /**
     * Create an aliased <code>selectbf_drives</code> table reference
     */
    public SelectbfDrives(String alias) {
        this(alias, SELECTBF_DRIVES);
    }

    private SelectbfDrives(String alias, Table<SelectbfDrivesRecord> aliased) {
        this(alias, aliased, null);
    }

    private SelectbfDrives(String alias, Table<SelectbfDrivesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<SelectbfDrivesRecord, Integer> getIdentity() {
        return Keys.IDENTITY_SELECTBF_DRIVES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<SelectbfDrivesRecord> getPrimaryKey() {
        return Keys.PK_SELECTBF_DRIVES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<SelectbfDrivesRecord>> getKeys() {
        return Arrays.<UniqueKey<SelectbfDrivesRecord>>asList(Keys.PK_SELECTBF_DRIVES);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SelectbfDrives as(String alias) {
        return new SelectbfDrives(alias, this);
    }

    /**
     * Rename this table
     */
    public SelectbfDrives rename(String name) {
        return new SelectbfDrives(name, null);
    }
}
