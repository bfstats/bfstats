/*
 * This file is generated by jOOQ.
*/
package io.github.bfstats.game.jooq.tables;


import io.github.bfstats.game.jooq.DefaultSchema;
import io.github.bfstats.game.jooq.Indexes;
import io.github.bfstats.game.jooq.Keys;
import io.github.bfstats.game.jooq.tables.records.RoundEndStatsPlayerRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RoundEndStatsPlayer extends TableImpl<RoundEndStatsPlayerRecord> {

    private static final long serialVersionUID = -838441466;

    /**
     * The reference instance of <code>round_end_stats_player</code>
     */
    public static final RoundEndStatsPlayer ROUND_END_STATS_PLAYER = new RoundEndStatsPlayer();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RoundEndStatsPlayerRecord> getRecordType() {
        return RoundEndStatsPlayerRecord.class;
    }

    /**
     * The column <code>round_end_stats_player.id</code>.
     */
    public final TableField<RoundEndStatsPlayerRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>round_end_stats_player.round_id</code>.
     */
    public final TableField<RoundEndStatsPlayerRecord, Integer> ROUND_ID = createField("round_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>round_end_stats_player.player_id</code>.
     */
    public final TableField<RoundEndStatsPlayerRecord, Integer> PLAYER_ID = createField("player_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>round_end_stats_player.player_name</code>.
     */
    public final TableField<RoundEndStatsPlayerRecord, String> PLAYER_NAME = createField("player_name", org.jooq.impl.SQLDataType.VARCHAR(150).nullable(false), this, "");

    /**
     * The column <code>round_end_stats_player.rank</code>.
     */
    public final TableField<RoundEndStatsPlayerRecord, Integer> RANK = createField("rank", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>round_end_stats_player.is_ai</code>.
     */
    public final TableField<RoundEndStatsPlayerRecord, Integer> IS_AI = createField("is_ai", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>round_end_stats_player.team</code>.
     */
    public final TableField<RoundEndStatsPlayerRecord, Integer> TEAM = createField("team", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>round_end_stats_player.score</code>.
     */
    public final TableField<RoundEndStatsPlayerRecord, Integer> SCORE = createField("score", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>round_end_stats_player.kills</code>.
     */
    public final TableField<RoundEndStatsPlayerRecord, Integer> KILLS = createField("kills", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>round_end_stats_player.deaths</code>.
     */
    public final TableField<RoundEndStatsPlayerRecord, Integer> DEATHS = createField("deaths", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>round_end_stats_player.tks</code>.
     */
    public final TableField<RoundEndStatsPlayerRecord, Integer> TKS = createField("tks", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>round_end_stats_player.captures</code>.
     */
    public final TableField<RoundEndStatsPlayerRecord, Integer> CAPTURES = createField("captures", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>round_end_stats_player.attacks</code>.
     */
    public final TableField<RoundEndStatsPlayerRecord, Integer> ATTACKS = createField("attacks", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>round_end_stats_player.defences</code>.
     */
    public final TableField<RoundEndStatsPlayerRecord, Integer> DEFENCES = createField("defences", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>round_end_stats_player</code> table reference
     */
    public RoundEndStatsPlayer() {
        this(DSL.name("round_end_stats_player"), null);
    }

    /**
     * Create an aliased <code>round_end_stats_player</code> table reference
     */
    public RoundEndStatsPlayer(String alias) {
        this(DSL.name(alias), ROUND_END_STATS_PLAYER);
    }

    /**
     * Create an aliased <code>round_end_stats_player</code> table reference
     */
    public RoundEndStatsPlayer(Name alias) {
        this(alias, ROUND_END_STATS_PLAYER);
    }

    private RoundEndStatsPlayer(Name alias, Table<RoundEndStatsPlayerRecord> aliased) {
        this(alias, aliased, null);
    }

    private RoundEndStatsPlayer(Name alias, Table<RoundEndStatsPlayerRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.ROUND_END_STATS_PLAYER_PLAYER_ID_IDX, Indexes.ROUND_END_STATS_PLAYER_ROUND_ID_IDX);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<RoundEndStatsPlayerRecord, Integer> getIdentity() {
        return Keys.IDENTITY_ROUND_END_STATS_PLAYER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<RoundEndStatsPlayerRecord> getPrimaryKey() {
        return Keys.PK_ROUND_END_STATS_PLAYER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<RoundEndStatsPlayerRecord>> getKeys() {
        return Arrays.<UniqueKey<RoundEndStatsPlayerRecord>>asList(Keys.PK_ROUND_END_STATS_PLAYER);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<RoundEndStatsPlayerRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<RoundEndStatsPlayerRecord, ?>>asList(Keys.FK_ROUND_END_STATS_PLAYER_ROUND_END_STATS_1, Keys.FK_ROUND_END_STATS_PLAYER_PLAYER_1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RoundEndStatsPlayer as(String alias) {
        return new RoundEndStatsPlayer(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RoundEndStatsPlayer as(Name alias) {
        return new RoundEndStatsPlayer(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public RoundEndStatsPlayer rename(String name) {
        return new RoundEndStatsPlayer(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public RoundEndStatsPlayer rename(Name name) {
        return new RoundEndStatsPlayer(name, null);
    }
}
