/*
 * This file is generated by jOOQ.
*/
package io.github.bfstats.dbstats.jooq.tables.records;


import io.github.bfstats.dbstats.jooq.tables.RoundPlayer;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RoundPlayerRecord extends UpdatableRecordImpl<RoundPlayerRecord> implements Record6<Integer, Integer, Integer, Integer, Timestamp, Timestamp> {

    private static final long serialVersionUID = -963503624;

    /**
     * Setter for <code>round_player.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>round_player.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>round_player.joined_round_id</code>.
     */
    public void setJoinedRoundId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>round_player.joined_round_id</code>.
     */
    public Integer getJoinedRoundId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>round_player.end_round_id</code>.
     */
    public void setEndRoundId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>round_player.end_round_id</code>.
     */
    public Integer getEndRoundId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>round_player.player_id</code>.
     */
    public void setPlayerId(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>round_player.player_id</code>.
     */
    public Integer getPlayerId() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>round_player.start_time</code>.
     */
    public void setStartTime(Timestamp value) {
        set(4, value);
    }

    /**
     * Getter for <code>round_player.start_time</code>.
     */
    public Timestamp getStartTime() {
        return (Timestamp) get(4);
    }

    /**
     * Setter for <code>round_player.end_time</code>.
     */
    public void setEndTime(Timestamp value) {
        set(5, value);
    }

    /**
     * Getter for <code>round_player.end_time</code>.
     */
    public Timestamp getEndTime() {
        return (Timestamp) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<Integer, Integer, Integer, Integer, Timestamp, Timestamp> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<Integer, Integer, Integer, Integer, Timestamp, Timestamp> valuesRow() {
        return (Row6) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return RoundPlayer.ROUND_PLAYER.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return RoundPlayer.ROUND_PLAYER.JOINED_ROUND_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return RoundPlayer.ROUND_PLAYER.END_ROUND_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field4() {
        return RoundPlayer.ROUND_PLAYER.PLAYER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field5() {
        return RoundPlayer.ROUND_PLAYER.START_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field6() {
        return RoundPlayer.ROUND_PLAYER.END_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component2() {
        return getJoinedRoundId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component3() {
        return getEndRoundId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component4() {
        return getPlayerId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component5() {
        return getStartTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component6() {
        return getEndTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getJoinedRoundId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getEndRoundId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value4() {
        return getPlayerId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value5() {
        return getStartTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value6() {
        return getEndTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RoundPlayerRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RoundPlayerRecord value2(Integer value) {
        setJoinedRoundId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RoundPlayerRecord value3(Integer value) {
        setEndRoundId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RoundPlayerRecord value4(Integer value) {
        setPlayerId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RoundPlayerRecord value5(Timestamp value) {
        setStartTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RoundPlayerRecord value6(Timestamp value) {
        setEndTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RoundPlayerRecord values(Integer value1, Integer value2, Integer value3, Integer value4, Timestamp value5, Timestamp value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RoundPlayerRecord
     */
    public RoundPlayerRecord() {
        super(RoundPlayer.ROUND_PLAYER);
    }

    /**
     * Create a detached, initialised RoundPlayerRecord
     */
    public RoundPlayerRecord(Integer id, Integer joinedRoundId, Integer endRoundId, Integer playerId, Timestamp startTime, Timestamp endTime) {
        super(RoundPlayer.ROUND_PLAYER);

        set(0, id);
        set(1, joinedRoundId);
        set(2, endRoundId);
        set(3, playerId);
        set(4, startTime);
        set(5, endTime);
    }
}
