/*
 * This file is generated by jOOQ.
*/
package io.github.bfstats.dbstats.jooq;


import io.github.bfstats.dbstats.jooq.tables.Configuration;
import io.github.bfstats.dbstats.jooq.tables.Game;
import io.github.bfstats.dbstats.jooq.tables.Player;
import io.github.bfstats.dbstats.jooq.tables.PlayerNickname;
import io.github.bfstats.dbstats.jooq.tables.PlayerRank;
import io.github.bfstats.dbstats.jooq.tables.Round;
import io.github.bfstats.dbstats.jooq.tables.RoundChatLog;
import io.github.bfstats.dbstats.jooq.tables.RoundEndStats;
import io.github.bfstats.dbstats.jooq.tables.RoundEndStatsPlayer;
import io.github.bfstats.dbstats.jooq.tables.RoundPlayer;
import io.github.bfstats.dbstats.jooq.tables.RoundPlayerDeath;
import io.github.bfstats.dbstats.jooq.tables.RoundPlayerMedpack;
import io.github.bfstats.dbstats.jooq.tables.RoundPlayerPickupKit;
import io.github.bfstats.dbstats.jooq.tables.RoundPlayerRepair;
import io.github.bfstats.dbstats.jooq.tables.RoundPlayerScoreEvent;
import io.github.bfstats.dbstats.jooq.tables.RoundPlayerTeam;
import io.github.bfstats.dbstats.jooq.tables.RoundPlayerVehicle;
import io.github.bfstats.dbstats.jooq.tables.Server;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DefaultSchema extends SchemaImpl {

    private static final long serialVersionUID = 53274009;

    /**
     * The reference instance of <code></code>
     */
    public static final DefaultSchema DEFAULT_SCHEMA = new DefaultSchema();

    /**
     * The table <code>configuration</code>.
     */
    public final Configuration CONFIGURATION = io.github.bfstats.dbstats.jooq.tables.Configuration.CONFIGURATION;

    /**
     * The table <code>game</code>.
     */
    public final Game GAME = io.github.bfstats.dbstats.jooq.tables.Game.GAME;

    /**
     * The table <code>player</code>.
     */
    public final Player PLAYER = io.github.bfstats.dbstats.jooq.tables.Player.PLAYER;

    /**
     * The table <code>player_nickname</code>.
     */
    public final PlayerNickname PLAYER_NICKNAME = io.github.bfstats.dbstats.jooq.tables.PlayerNickname.PLAYER_NICKNAME;

    /**
     * The table <code>player_rank</code>.
     */
    public final PlayerRank PLAYER_RANK = io.github.bfstats.dbstats.jooq.tables.PlayerRank.PLAYER_RANK;

    /**
     * The table <code>round</code>.
     */
    public final Round ROUND = io.github.bfstats.dbstats.jooq.tables.Round.ROUND;

    /**
     * The table <code>round_chat_log</code>.
     */
    public final RoundChatLog ROUND_CHAT_LOG = io.github.bfstats.dbstats.jooq.tables.RoundChatLog.ROUND_CHAT_LOG;

    /**
     * The table <code>round_end_stats</code>.
     */
    public final RoundEndStats ROUND_END_STATS = io.github.bfstats.dbstats.jooq.tables.RoundEndStats.ROUND_END_STATS;

    /**
     * The table <code>round_end_stats_player</code>.
     */
    public final RoundEndStatsPlayer ROUND_END_STATS_PLAYER = io.github.bfstats.dbstats.jooq.tables.RoundEndStatsPlayer.ROUND_END_STATS_PLAYER;

    /**
     * The table <code>round_player</code>.
     */
    public final RoundPlayer ROUND_PLAYER = io.github.bfstats.dbstats.jooq.tables.RoundPlayer.ROUND_PLAYER;

    /**
     * The table <code>round_player_death</code>.
     */
    public final RoundPlayerDeath ROUND_PLAYER_DEATH = io.github.bfstats.dbstats.jooq.tables.RoundPlayerDeath.ROUND_PLAYER_DEATH;

    /**
     * The table <code>round_player_medpack</code>.
     */
    public final RoundPlayerMedpack ROUND_PLAYER_MEDPACK = io.github.bfstats.dbstats.jooq.tables.RoundPlayerMedpack.ROUND_PLAYER_MEDPACK;

    /**
     * The table <code>round_player_pickup_kit</code>.
     */
    public final RoundPlayerPickupKit ROUND_PLAYER_PICKUP_KIT = io.github.bfstats.dbstats.jooq.tables.RoundPlayerPickupKit.ROUND_PLAYER_PICKUP_KIT;

    /**
     * The table <code>round_player_repair</code>.
     */
    public final RoundPlayerRepair ROUND_PLAYER_REPAIR = io.github.bfstats.dbstats.jooq.tables.RoundPlayerRepair.ROUND_PLAYER_REPAIR;

    /**
     * The table <code>round_player_score_event</code>.
     */
    public final RoundPlayerScoreEvent ROUND_PLAYER_SCORE_EVENT = io.github.bfstats.dbstats.jooq.tables.RoundPlayerScoreEvent.ROUND_PLAYER_SCORE_EVENT;

    /**
     * The table <code>round_player_team</code>.
     */
    public final RoundPlayerTeam ROUND_PLAYER_TEAM = io.github.bfstats.dbstats.jooq.tables.RoundPlayerTeam.ROUND_PLAYER_TEAM;

    /**
     * The table <code>round_player_vehicle</code>.
     */
    public final RoundPlayerVehicle ROUND_PLAYER_VEHICLE = io.github.bfstats.dbstats.jooq.tables.RoundPlayerVehicle.ROUND_PLAYER_VEHICLE;

    /**
     * The table <code>server</code>.
     */
    public final Server SERVER = io.github.bfstats.dbstats.jooq.tables.Server.SERVER;

    /**
     * No further instances allowed
     */
    private DefaultSchema() {
        super("", null);
    }


    /**
     * {@inheritDoc}
     */
    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        List result = new ArrayList();
        result.addAll(getTables0());
        return result;
    }

    private final List<Table<?>> getTables0() {
        return Arrays.<Table<?>>asList(
            Configuration.CONFIGURATION,
            Game.GAME,
            Player.PLAYER,
            PlayerNickname.PLAYER_NICKNAME,
            PlayerRank.PLAYER_RANK,
            Round.ROUND,
            RoundChatLog.ROUND_CHAT_LOG,
            RoundEndStats.ROUND_END_STATS,
            RoundEndStatsPlayer.ROUND_END_STATS_PLAYER,
            RoundPlayer.ROUND_PLAYER,
            RoundPlayerDeath.ROUND_PLAYER_DEATH,
            RoundPlayerMedpack.ROUND_PLAYER_MEDPACK,
            RoundPlayerPickupKit.ROUND_PLAYER_PICKUP_KIT,
            RoundPlayerRepair.ROUND_PLAYER_REPAIR,
            RoundPlayerScoreEvent.ROUND_PLAYER_SCORE_EVENT,
            RoundPlayerTeam.ROUND_PLAYER_TEAM,
            RoundPlayerVehicle.ROUND_PLAYER_VEHICLE,
            Server.SERVER);
    }
}
