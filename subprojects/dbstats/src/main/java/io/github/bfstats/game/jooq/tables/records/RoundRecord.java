/*
 * This file is generated by jOOQ.
*/
package io.github.bfstats.game.jooq.tables.records;


import io.github.bfstats.game.jooq.tables.Round;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RoundRecord extends UpdatableRecordImpl<RoundRecord> {

    private static final long serialVersionUID = -1995389160;

    /**
     * Setter for <code>round.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>round.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>round.game_id</code>.
     */
    public void setGameId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>round.game_id</code>.
     */
    public Integer getGameId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>round.start_time</code>.
     */
    public void setStartTime(Timestamp value) {
        set(2, value);
    }

    /**
     * Getter for <code>round.start_time</code>.
     */
    public Timestamp getStartTime() {
        return (Timestamp) get(2);
    }

    /**
     * Setter for <code>round.start_tickets_team_1</code>.
     */
    public void setStartTicketsTeam_1(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>round.start_tickets_team_1</code>.
     */
    public Integer getStartTicketsTeam_1() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>round.start_tickets_team_2</code>.
     */
    public void setStartTicketsTeam_2(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>round.start_tickets_team_2</code>.
     */
    public Integer getStartTicketsTeam_2() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>round.server_name</code>.
     */
    public void setServerName(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>round.server_name</code>.
     */
    public String getServerName() {
        return (String) get(5);
    }

    /**
     * Setter for <code>round.server_port</code>.
     */
    public void setServerPort(Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>round.server_port</code>.
     */
    public Integer getServerPort() {
        return (Integer) get(6);
    }

    /**
     * Setter for <code>round.mod_id</code>.
     */
    public void setModId(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>round.mod_id</code>.
     */
    public String getModId() {
        return (String) get(7);
    }

    /**
     * Setter for <code>round.map_code</code>.
     */
    public void setMapCode(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>round.map_code</code>.
     */
    public String getMapCode() {
        return (String) get(8);
    }

    /**
     * Setter for <code>round.game_mode</code>.
     */
    public void setGameMode(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>round.game_mode</code>.
     */
    public String getGameMode() {
        return (String) get(9);
    }

    /**
     * Setter for <code>round.max_game_time</code>.
     */
    public void setMaxGameTime(Integer value) {
        set(10, value);
    }

    /**
     * Getter for <code>round.max_game_time</code>.
     */
    public Integer getMaxGameTime() {
        return (Integer) get(10);
    }

    /**
     * Setter for <code>round.max_players</code>.
     */
    public void setMaxPlayers(Integer value) {
        set(11, value);
    }

    /**
     * Getter for <code>round.max_players</code>.
     */
    public Integer getMaxPlayers() {
        return (Integer) get(11);
    }

    /**
     * Setter for <code>round.score_limit</code>.
     */
    public void setScoreLimit(Integer value) {
        set(12, value);
    }

    /**
     * Getter for <code>round.score_limit</code>.
     */
    public Integer getScoreLimit() {
        return (Integer) get(12);
    }

    /**
     * Setter for <code>round.no_of_rounds</code>.
     */
    public void setNoOfRounds(Integer value) {
        set(13, value);
    }

    /**
     * Getter for <code>round.no_of_rounds</code>.
     */
    public Integer getNoOfRounds() {
        return (Integer) get(13);
    }

    /**
     * Setter for <code>round.spawn_time</code>.
     */
    public void setSpawnTime(Integer value) {
        set(14, value);
    }

    /**
     * Getter for <code>round.spawn_time</code>.
     */
    public Integer getSpawnTime() {
        return (Integer) get(14);
    }

    /**
     * Setter for <code>round.spawn_delay</code>.
     */
    public void setSpawnDelay(Integer value) {
        set(15, value);
    }

    /**
     * Getter for <code>round.spawn_delay</code>.
     */
    public Integer getSpawnDelay() {
        return (Integer) get(15);
    }

    /**
     * Setter for <code>round.game_start_delay</code>.
     */
    public void setGameStartDelay(Integer value) {
        set(16, value);
    }

    /**
     * Getter for <code>round.game_start_delay</code>.
     */
    public Integer getGameStartDelay() {
        return (Integer) get(16);
    }

    /**
     * Setter for <code>round.round_start_delay</code>.
     */
    public void setRoundStartDelay(Integer value) {
        set(17, value);
    }

    /**
     * Getter for <code>round.round_start_delay</code>.
     */
    public Integer getRoundStartDelay() {
        return (Integer) get(17);
    }

    /**
     * Setter for <code>round.soldier_ff</code>.
     */
    public void setSoldierFf(Integer value) {
        set(18, value);
    }

    /**
     * Getter for <code>round.soldier_ff</code>.
     */
    public Integer getSoldierFf() {
        return (Integer) get(18);
    }

    /**
     * Setter for <code>round.vehicle_ff</code>.
     */
    public void setVehicleFf(Integer value) {
        set(19, value);
    }

    /**
     * Getter for <code>round.vehicle_ff</code>.
     */
    public Integer getVehicleFf() {
        return (Integer) get(19);
    }

    /**
     * Setter for <code>round.ticket_ratio</code>.
     */
    public void setTicketRatio(Integer value) {
        set(20, value);
    }

    /**
     * Getter for <code>round.ticket_ratio</code>.
     */
    public Integer getTicketRatio() {
        return (Integer) get(20);
    }

    /**
     * Setter for <code>round.team_kill_punish</code>.
     */
    public void setTeamKillPunish(Integer value) {
        set(21, value);
    }

    /**
     * Getter for <code>round.team_kill_punish</code>.
     */
    public Integer getTeamKillPunish() {
        return (Integer) get(21);
    }

    /**
     * Setter for <code>round.punkbuster_enabled</code>.
     */
    public void setPunkbusterEnabled(Integer value) {
        set(22, value);
    }

    /**
     * Getter for <code>round.punkbuster_enabled</code>.
     */
    public Integer getPunkbusterEnabled() {
        return (Integer) get(22);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RoundRecord
     */
    public RoundRecord() {
        super(Round.ROUND);
    }

    /**
     * Create a detached, initialised RoundRecord
     */
    public RoundRecord(Integer id, Integer gameId, Timestamp startTime, Integer startTicketsTeam_1, Integer startTicketsTeam_2, String serverName, Integer serverPort, String modId, String mapCode, String gameMode, Integer maxGameTime, Integer maxPlayers, Integer scoreLimit, Integer noOfRounds, Integer spawnTime, Integer spawnDelay, Integer gameStartDelay, Integer roundStartDelay, Integer soldierFf, Integer vehicleFf, Integer ticketRatio, Integer teamKillPunish, Integer punkbusterEnabled) {
        super(Round.ROUND);

        set(0, id);
        set(1, gameId);
        set(2, startTime);
        set(3, startTicketsTeam_1);
        set(4, startTicketsTeam_2);
        set(5, serverName);
        set(6, serverPort);
        set(7, modId);
        set(8, mapCode);
        set(9, gameMode);
        set(10, maxGameTime);
        set(11, maxPlayers);
        set(12, scoreLimit);
        set(13, noOfRounds);
        set(14, spawnTime);
        set(15, spawnDelay);
        set(16, gameStartDelay);
        set(17, roundStartDelay);
        set(18, soldierFf);
        set(19, vehicleFf);
        set(20, ticketRatio);
        set(21, teamKillPunish);
        set(22, punkbusterEnabled);
    }
}
