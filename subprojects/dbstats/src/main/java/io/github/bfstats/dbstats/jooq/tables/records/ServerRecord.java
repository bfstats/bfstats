/*
 * This file is generated by jOOQ.
*/
package io.github.bfstats.dbstats.jooq.tables.records;


import io.github.bfstats.dbstats.jooq.tables.Server;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ServerRecord extends UpdatableRecordImpl<ServerRecord> implements Record5<Integer, Integer, Integer, String, String> {

    private static final long serialVersionUID = -604655030;

    /**
     * Setter for <code>server.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>server.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>server.ip</code>.
     */
    public void setIp(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>server.ip</code>.
     */
    public Integer getIp() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>server.port</code>.
     */
    public void setPort(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>server.port</code>.
     */
    public Integer getPort() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>server.name</code>.
     */
    public void setName(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>server.name</code>.
     */
    public String getName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>server.timezone_name</code>.
     */
    public void setTimezoneName(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>server.timezone_name</code>.
     */
    public String getTimezoneName() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, Integer, Integer, String, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, Integer, Integer, String, String> valuesRow() {
        return (Row5) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Server.SERVER.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return Server.SERVER.IP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return Server.SERVER.PORT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Server.SERVER.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Server.SERVER.TIMEZONE_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component2() {
        return getIp();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component3() {
        return getPort();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getTimezoneName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getIp();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getPort();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getTimezoneName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ServerRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ServerRecord value2(Integer value) {
        setIp(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ServerRecord value3(Integer value) {
        setPort(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ServerRecord value4(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ServerRecord value5(String value) {
        setTimezoneName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ServerRecord values(Integer value1, Integer value2, Integer value3, String value4, String value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ServerRecord
     */
    public ServerRecord() {
        super(Server.SERVER);
    }

    /**
     * Create a detached, initialised ServerRecord
     */
    public ServerRecord(Integer id, Integer ip, Integer port, String name, String timezoneName) {
        super(Server.SERVER);

        set(0, id);
        set(1, ip);
        set(2, port);
        set(3, name);
        set(4, timezoneName);
    }
}
