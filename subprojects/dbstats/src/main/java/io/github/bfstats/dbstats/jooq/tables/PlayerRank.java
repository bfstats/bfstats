/*
 * This file is generated by jOOQ.
*/
package io.github.bfstats.dbstats.jooq.tables;


import io.github.bfstats.dbstats.jooq.DefaultSchema;
import io.github.bfstats.dbstats.jooq.tables.records.PlayerRankRecord;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PlayerRank extends TableImpl<PlayerRankRecord> {

    private static final long serialVersionUID = -1908935906;

    /**
     * The reference instance of <code>player_rank</code>
     */
    public static final PlayerRank PLAYER_RANK = new PlayerRank();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PlayerRankRecord> getRecordType() {
        return PlayerRankRecord.class;
    }

    /**
     * The column <code>player_rank.player_id</code>.
     */
    public final TableField<PlayerRankRecord, Integer> PLAYER_ID = createField("player_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public final TableField<PlayerRankRecord, Object> POINTS = createField("points", org.jooq.impl.DefaultDataType.getDefaultDataType(""), this, "");

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public final TableField<PlayerRankRecord, Object> PLAYER_RANK_ = createField("player_rank", org.jooq.impl.DefaultDataType.getDefaultDataType(""), this, "");

    /**
     * Create a <code>player_rank</code> table reference
     */
    public PlayerRank() {
        this(DSL.name("player_rank"), null);
    }

    /**
     * Create an aliased <code>player_rank</code> table reference
     */
    public PlayerRank(String alias) {
        this(DSL.name(alias), PLAYER_RANK);
    }

    /**
     * Create an aliased <code>player_rank</code> table reference
     */
    public PlayerRank(Name alias) {
        this(alias, PLAYER_RANK);
    }

    private PlayerRank(Name alias, Table<PlayerRankRecord> aliased) {
        this(alias, aliased, null);
    }

    private PlayerRank(Name alias, Table<PlayerRankRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PlayerRank as(String alias) {
        return new PlayerRank(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PlayerRank as(Name alias) {
        return new PlayerRank(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public PlayerRank rename(String name) {
        return new PlayerRank(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public PlayerRank rename(Name name) {
        return new PlayerRank(name, null);
    }
}
