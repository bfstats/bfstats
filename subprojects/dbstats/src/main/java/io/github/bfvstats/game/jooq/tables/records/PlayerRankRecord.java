/*
 * This file is generated by jOOQ.
*/
package io.github.bfvstats.game.jooq.tables.records;


import io.github.bfvstats.game.jooq.tables.PlayerRank;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PlayerRankRecord extends UpdatableRecordImpl<PlayerRankRecord> implements Record2<Integer, Integer> {

    private static final long serialVersionUID = 1334358389;

    /**
     * Setter for <code>player_rank.rank</code>.
     */
    public void setRank(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>player_rank.rank</code>.
     */
    public Integer getRank() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>player_rank.player_id</code>.
     */
    public void setPlayerId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>player_rank.player_id</code>.
     */
    public Integer getPlayerId() {
        return (Integer) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Integer, Integer> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Integer, Integer> valuesRow() {
        return (Row2) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return PlayerRank.PLAYER_RANK.RANK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return PlayerRank.PLAYER_RANK.PLAYER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getRank();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component2() {
        return getPlayerId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getRank();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getPlayerId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PlayerRankRecord value1(Integer value) {
        setRank(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PlayerRankRecord value2(Integer value) {
        setPlayerId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PlayerRankRecord values(Integer value1, Integer value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PlayerRankRecord
     */
    public PlayerRankRecord() {
        super(PlayerRank.PLAYER_RANK);
    }

    /**
     * Create a detached, initialised PlayerRankRecord
     */
    public PlayerRankRecord(Integer rank, Integer playerId) {
        super(PlayerRank.PLAYER_RANK);

        set(0, rank);
        set(1, playerId);
    }
}
