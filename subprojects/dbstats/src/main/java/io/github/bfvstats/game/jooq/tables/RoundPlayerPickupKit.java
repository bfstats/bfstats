/**
 * This class is generated by jOOQ
 */
package io.github.bfvstats.game.jooq.tables;


import io.github.bfvstats.game.jooq.DefaultSchema;
import io.github.bfvstats.game.jooq.Keys;
import io.github.bfvstats.game.jooq.tables.records.RoundPlayerPickupKitRecord;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RoundPlayerPickupKit extends TableImpl<RoundPlayerPickupKitRecord> {

    private static final long serialVersionUID = -274761425;

    /**
     * The reference instance of <code>round_player_pickup_kit</code>
     */
    public static final RoundPlayerPickupKit ROUND_PLAYER_PICKUP_KIT = new RoundPlayerPickupKit();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RoundPlayerPickupKitRecord> getRecordType() {
        return RoundPlayerPickupKitRecord.class;
    }

    /**
     * The column <code>round_player_pickup_kit.id</code>.
     */
    public final TableField<RoundPlayerPickupKitRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>round_player_pickup_kit.round_id</code>.
     */
    public final TableField<RoundPlayerPickupKitRecord, Integer> ROUND_ID = createField("round_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>round_player_pickup_kit.player_id</code>.
     */
    public final TableField<RoundPlayerPickupKitRecord, Integer> PLAYER_ID = createField("player_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>round_player_pickup_kit.player_location_x</code>.
     */
    public final TableField<RoundPlayerPickupKitRecord, BigDecimal> PLAYER_LOCATION_X = createField("player_location_x", org.jooq.impl.SQLDataType.NUMERIC.precision(4, 4).nullable(false), this, "");

    /**
     * The column <code>round_player_pickup_kit.player_location_y</code>.
     */
    public final TableField<RoundPlayerPickupKitRecord, BigDecimal> PLAYER_LOCATION_Y = createField("player_location_y", org.jooq.impl.SQLDataType.NUMERIC.precision(4, 4).nullable(false), this, "");

    /**
     * The column <code>round_player_pickup_kit.player_location_z</code>.
     */
    public final TableField<RoundPlayerPickupKitRecord, BigDecimal> PLAYER_LOCATION_Z = createField("player_location_z", org.jooq.impl.SQLDataType.NUMERIC.precision(4, 4).nullable(false), this, "");

    /**
     * The column <code>round_player_pickup_kit.kit</code>.
     */
    public final TableField<RoundPlayerPickupKitRecord, String> KIT = createField("kit", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false), this, "");

    /**
     * The column <code>round_player_pickup_kit.event_time</code>.
     */
    public final TableField<RoundPlayerPickupKitRecord, Timestamp> EVENT_TIME = createField("event_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * Create a <code>round_player_pickup_kit</code> table reference
     */
    public RoundPlayerPickupKit() {
        this("round_player_pickup_kit", null);
    }

    /**
     * Create an aliased <code>round_player_pickup_kit</code> table reference
     */
    public RoundPlayerPickupKit(String alias) {
        this(alias, ROUND_PLAYER_PICKUP_KIT);
    }

    private RoundPlayerPickupKit(String alias, Table<RoundPlayerPickupKitRecord> aliased) {
        this(alias, aliased, null);
    }

    private RoundPlayerPickupKit(String alias, Table<RoundPlayerPickupKitRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<RoundPlayerPickupKitRecord> getPrimaryKey() {
        return Keys.PK_ROUND_PLAYER_PICKUP_KIT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<RoundPlayerPickupKitRecord>> getKeys() {
        return Arrays.<UniqueKey<RoundPlayerPickupKitRecord>>asList(Keys.PK_ROUND_PLAYER_PICKUP_KIT);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<RoundPlayerPickupKitRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<RoundPlayerPickupKitRecord, ?>>asList(Keys.FK_ROUND_PLAYER_PICKUP_KIT_ROUND_1, Keys.FK_ROUND_PLAYER_PICKUP_KIT_PLAYER_1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RoundPlayerPickupKit as(String alias) {
        return new RoundPlayerPickupKit(alias, this);
    }

    /**
     * Rename this table
     */
    public RoundPlayerPickupKit rename(String name) {
        return new RoundPlayerPickupKit(name, null);
    }
}
