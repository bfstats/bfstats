/**
 * This class is generated by jOOQ
 */
package io.github.bfvstats.game.jooq.tables;


import io.github.bfvstats.game.jooq.DefaultSchema;
import io.github.bfvstats.game.jooq.Keys;
import io.github.bfvstats.game.jooq.tables.records.PlayerRankRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PlayerRank extends TableImpl<PlayerRankRecord> {

    private static final long serialVersionUID = 1065474358;

    /**
     * The reference instance of <code>player_rank</code>
     */
    public static final PlayerRank PLAYER_RANK = new PlayerRank();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PlayerRankRecord> getRecordType() {
        return PlayerRankRecord.class;
    }

    /**
     * The column <code>player_rank.rank</code>.
     */
    public final TableField<PlayerRankRecord, Integer> RANK = createField("rank", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>player_rank.player_id</code>.
     */
    public final TableField<PlayerRankRecord, Integer> PLAYER_ID = createField("player_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>player_rank</code> table reference
     */
    public PlayerRank() {
        this("player_rank", null);
    }

    /**
     * Create an aliased <code>player_rank</code> table reference
     */
    public PlayerRank(String alias) {
        this(alias, PLAYER_RANK);
    }

    private PlayerRank(String alias, Table<PlayerRankRecord> aliased) {
        this(alias, aliased, null);
    }

    private PlayerRank(String alias, Table<PlayerRankRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<PlayerRankRecord, Integer> getIdentity() {
        return Keys.IDENTITY_PLAYER_RANK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<PlayerRankRecord> getPrimaryKey() {
        return Keys.PK_PLAYER_RANK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<PlayerRankRecord>> getKeys() {
        return Arrays.<UniqueKey<PlayerRankRecord>>asList(Keys.PK_PLAYER_RANK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<PlayerRankRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<PlayerRankRecord, ?>>asList(Keys.FK_PLAYER_RANK_PLAYER_1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PlayerRank as(String alias) {
        return new PlayerRank(alias, this);
    }

    /**
     * Rename this table
     */
    public PlayerRank rename(String name) {
        return new PlayerRank(name, null);
    }
}
